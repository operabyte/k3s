---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: tfoumax
  name: redis
  labels:
    app: redis
spec:
  serviceName: redis
  replicas: 2
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: ""
                operator: In
                values:
                - ""
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - redis
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
      tolerations:
      - key: "balanced"
        operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: redis
        image: redis:version
        imagePullPolicy: Always
        command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
        ports:
        - containerPort: 6379
        volumeMounts:
          - name: tfoumax-redis-config
            mountPath: /usr/local/etc/redis/
            readOnly: true
          - name: redis-storage
            mountPath: /data
      - name: redis-exporter
        image: redis_exporter:version
        imagePullPolicy: Always
        command: ["redis_exporter"]
        ports:
        - containerPort: 9121

      volumes:
        - name: tfoumax-redis-config
          configMap:
            name: tfoumax-redis-config
        - name: redis-storage
          emptyDir: {}
